name: Build and Security Scan
on: push
jobs:
  build-and-scan:
    runs-on: arc-runner-set
    steps:
    - name: Check out repository 
      uses: actions/checkout@v4
    - name: Install libcurl4-openssl-dev
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev build-essential libxml2-dev libssl-dev libfreetype6-dev
    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: 4.3.2 # Specify your desired R
        
    - name: Lint code base
      # uses: github/super-linter@v4
      env:
        VALIDATE_ALL_CODEBASE: false
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ steps.getPass.outputs.secret }}
        GITHUB_EVENT_PATH: /__w/_temp/_github_workflow/event.json
        VALIDATE_KUBERNETES_KUBEVAL: false

      run: |
        export GITHUB_EVENT_PATH=/__w/_temp/_github_workflow/event.json
        /action/lib/linter.sh


       
    # - name: Install Dependencies
    #   run: |
    #     Rscript -e "install.packages ('textshaping')"
    #     Rscript -e "install.packages ('curl')"
    #     Rscript -e "install.packages ('targets')"
    #     Rscript -e "install.packages ('futile.logger')"
    #     Rscript -e "install.packages ('conflicted')"
    #     Rscript -e "install.packages ('remotes')"
    #     Rscript -e "install.packages('shiny')"
    #     Rscript -e "install.packages('tidyverse')"
    #     Rscript -e "install.packages('cyclocomp',repos='http://cran.us.r-project.org')"
    #     Rscript -e "install.packages('xml2',repos='http://cran.us.r-project.org')"
    #     Rscript -e "install.packages('knitr',repos='http://cran.us.r-project.org')"
    #     Rscript -e "install.packages('digest',repos='http://cran.us.r-project.org')"
    #     Rscript -e "install.packages('glue',repos='http://cran.us.r-project.org')"
    #     Rscript -e "install.packages('backports',repos='http://cran.us.r-project.org')"
    #     Rscript -e "install.packages('rex',repos='http://cran.us.r-project.org')"
    # - name: Install lintr
    #   run: Rscript -e "install.packages ('lintr')"
    # - name: Run lintr
    #   run: Rscript -e 'lintr::lint_package()'
    # - name: scan your project
    #   uses: anchore/scan-action@v3
    #   with:
    #     path: "."
